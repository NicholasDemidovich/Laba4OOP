#pragma once
#include <iostream>
#include "stdio.h"
#include <set>
using namespace std;

void passTheTest()
{
	set<int> setTest;
	bool checkSome = false;
	system("Cls");
	int countRightAnswer = 0;
	int sw;
	cout << "\n\tВ данном тесте представлено 5 вопросов на тему:Обработка исключений в языке C++."
		<< "\n\tВведите любое число чтобы начать тест: ";
	cin >> sw;
	system("Cls");
	cout << "\n\t***Вопрос №1***\n\tЧто называется исключением в языке C++: ";
	cout << "\n|1|.Исключения (exception) – это механизм получения нового класса,"
		<< "\nиз уже существующего;";
	cout << "\n|2|.Исключения (exception) – это объект системного или пользовательского класса, "
		<< "\nсоздаваемого операционной системой или кодом программы в ответ на обстоятельства;";
	cout << "\n|3|.Исключения (exception) – это механизм который позволяет многократно,"
		<< "\nиспользовать код по отношению к различным типам;";
	cout << "\n|4|.Исключения (exception) – это свойство которое позволяет использовать,"
		<< "\nодно и то же имя,для решения нескольких технических задач:";
	cin >> sw;
	if (sw == 2) { countRightAnswer++; }
	else
	{
		setTest.insert(1);
		checkSome = true;
	}

	system("Cls");
	cout << "\n\t***Вопрос №2***\n\tЧем завершается оператор throw: ";
	cout << "\n|1|.Оператор throw завершается точкой;";
	cout << "\n|2|.Оператор throw завершается фигурными скобками;";
	cout << "\n|3|.Оператор throw, как правило, завершается точкой с запятой, что делает его выражением;";
	cout << "\n|4|.Зависит от контекста использования данного оператора,"
		<< "\nчаще всего используется точка или фигурные скобки:";
	cin >> sw;
	if (sw == 3) { countRightAnswer++; }
	else
	{
		setTest.insert(2);
		checkSome = true;
	}

	system("Cls");
	cout << "\n\t***Вопрос №3***\n\tЧто обеспечивают исключения: ";
	cout << "\n|1|.Исключения обеспечивают взаимодействие частей программы,"
		<< "\nобнаруживающих проблему и решающих ее;";
	cout << "\n|2|.Обеспечивают надежную защиту данных;";
	cout << "\n|3|.Позволяют переходить в любое место в пределах функции;";
	cout << "\n|4|.Обеспечивают возврат кода ошибки через аргумент функции:";
	cin >> sw;
	if (sw == 1) { countRightAnswer++; }
	else
	{
		setTest.insert(3);
		checkSome = true;
	}

	system("Cls");
	cout << "\n\t***Вопрос №4***\n\tЧем обязательно должен сопровождаться блок try: ";
	cout << "\n|1|.Функцией runtime_error";
	cout << "\n|2|.Оператором throw;";
	cout << "\n|3|.Функциями setjmp и longjmp;";
	cout << "\n|4|.Одним или несколькими блоками catch:";
	cin >> sw;
	if (sw == 4) { countRightAnswer++; }
	else
	{
		setTest.insert(4);
		checkSome = true;
	}

	system("Cls");
	cout << "\n\t***Вопрос №5***\n\tЧто добавляет в программу использование макроса assert: ";
	cout << "\n|1|.Добавляет к программе процедуру диагностики;";
	cout << "\n|2|.Пользовательский класс;";
	cout << "\n|3|.Функцию terminate;";
	cout << "\n|4|.Добавляет абсолютный обработчик:";
	cin >> sw;
	if (sw == 1) { countRightAnswer++; }
	else
	{
		setTest.insert(5);
		checkSome = true;
	}


	switch (countRightAnswer)
	{
	case 0:
		system("Cls");
		cout << "\n\tВаш результат: " << countRightAnswer << " баллов."
			<< "\n\tВам необходимо пройти данную тему заново!";
		break;
	case 1:
		system("Cls");
		cout << "\n\tВаш результат: " << countRightAnswer << " балл."
			<< "\n\tЛучше чем ничего,но стоит пройтись по данной теме еще несколько раз.";
		break;
	case 2:
		system("Cls");
		cout << "\n\tВаш результат: " << countRightAnswer << " баллa."
			<< "\n\tНеплохо,но повторить определенно стоит.";
		break;
	case 3:
		system("Cls");
		cout << "\n\tВаш результат: " << countRightAnswer << " баллa."
			<< "\n\tХороший результат,но вам следует повторить основныем моменты.";
		break;
	case 4:
		system("Cls");
		cout << "\n\tВаш результат: " << countRightAnswer << " баллa."
			<< "\n\tПочти идеально!";
		break;
	case 5:
		system("Cls");
		cout << "\n\tВаш результат: " << countRightAnswer << " баллов."
			<< "\n\tВы изучили данную тему на отлично!";
		break;
	}
	

	cout << "\n\t***Правильные варианты овтетов***";
	cout << "\nВопрос №1:";
	cout << "\nИсключения (exception) – это объект системного или пользовательского класса, "
		<< "\nсоздаваемого операционной системой или кодом программы в ответ на обстоятельства;";
	cout << "\nВопрос №2:";
	cout << "\nОператор throw, как правило, завершается точкой с запятой, что делает его выражением;";
	cout << "\nВопрос №3:";
	cout << "\nИсключения обеспечивают взаимодействие частей программы,"
		<< "\nобнаруживающих проблему и решающих ее;";
	cout << "\nВопрос №4:";
	cout << "\nОдним или несколькими блоками catch:";
	cout << "\nВопрос №5:";
	cout << "\nДобавляет к программе процедуру диагностики;";

	if (checkSome)
	{
		cout << "\n\t|||Номера вопросов на которые вы ответили неверно:";
		for (auto temp : setTest)
		{
			cout << " " << temp;
		}
	}

	cout <<"|||"<< endl;
	system("pause");
}